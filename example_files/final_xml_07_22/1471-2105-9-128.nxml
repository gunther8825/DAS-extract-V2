<!DOCTYPE article PUBLIC "-//NLM//DTD Journal Archiving and Interchange DTD v2.3 20070202//EN" "archivearticle.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id><journal-title>BMC Bioinformatics</journal-title><issn pub-type="epub">1471-2105</issn><publisher><publisher-name>BioMed Central</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">18307793</article-id><article-id pub-id-type="pmc">2335322</article-id><article-id pub-id-type="publisher-id">1471-2105-9-128</article-id><article-id pub-id-type="doi">10.1186/1471-2105-9-128</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group></article-categories><title-group><article-title>Using quality scores and longer reads improves accuracy of Solexa read mapping</article-title></title-group><contrib-group><contrib id="A1" equal-contrib="yes" contrib-type="author"><name><surname>Smith</surname><given-names>Andrew D</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>asmith@cshl.edu</email></contrib><contrib id="A2" equal-contrib="yes" contrib-type="author"><name><surname>Xuan</surname><given-names>Zhenyu</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>xuan@cshl.edu</email></contrib><contrib id="A3" corresp="yes" contrib-type="author"><name><surname>Zhang</surname><given-names>Michael Q</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>mzhang@cshl.edu</email></contrib></contrib-group><aff id="I1"><label>1</label>Cold Spring Harbor Laboratory, Cold Spring Harbor, NY 11274, USA</aff><pub-date pub-type="collection"><year>2008</year></pub-date><pub-date pub-type="epub"><day>28</day><month>2</month><year>2008</year></pub-date><volume>9</volume><fpage>128</fpage><lpage>128</lpage><ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/1471-2105/9/128"/><history><date date-type="received"><day>5</day><month>10</month><year>2007</year></date><date date-type="accepted"><day>28</day><month>2</month><year>2008</year></date></history><permissions><copyright-statement>Copyright &#x000a9; 2008 Smith et al; licensee BioMed Central Ltd.</copyright-statement><copyright-year>2008</copyright-year><copyright-holder>Smith et al; licensee BioMed Central Ltd.</copyright-holder><license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0"><p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0"/>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</p><!--<rdf xmlns="http://web.resource.org/cc/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1" xmlns:dcterms="http://purl.org/dc/terms"><Work xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" rdf:about=""><license rdf:resource="http://creativecommons.org/licenses/by/2.0"/><dc:type rdf:resource="http://purl.org/dc/dcmitype/Text"/><dc:author>
               Smith
               D
               Andrew
               
               asmith@cshl.edu
            </dc:author><dc:title>
            Using quality scores and longer reads improves accuracy of Solexa read mapping
         </dc:title><dc:date>2008</dc:date><dcterms:bibliographicCitation>BMC Bioinformatics 9(1): 128-. (2008)</dcterms:bibliographicCitation><dc:identifier type="sici">1471-2105(2008)9:1&#x0003c;128&#x0003e;</dc:identifier><dcterms:isPartOf>urn:ISSN:1471-2105</dcterms:isPartOf><License rdf:about="http://creativecommons.org/licenses/by/2.0"><permits rdf:resource="http://web.resource.org/cc/Reproduction" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/Distribution" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Notice" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Attribution" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/DerivativeWorks" xmlns=""/></License></Work></rdf>--></license></permissions><abstract><sec><title>Background</title><p>Second-generation sequencing has the potential to revolutionize genomics and impact all areas of biomedical science. New technologies will make re-sequencing widely available for such applications as identifying genome variations or interrogating the oligonucleotide content of a large sample (<italic>e.g</italic>. ChIP-sequencing). The increase in speed, sensitivity and availability of sequencing technology brings demand for advances in computational technology to perform associated analysis tasks. The Solexa/Illumina 1G sequencer can produce tens of millions of reads, ranging in length from ~25&#x02013;50 nt, in a single experiment. Accurately mapping the reads back to a reference genome is a critical task in almost all applications. Two sources of information that are often ignored when mapping reads from the Solexa technology are the 3' ends of longer reads, which contain a much higher frequency of sequencing errors, and the base-call quality scores.</p></sec><sec><title>Results</title><p>To investigate whether these sources of information can be used to improve accuracy when mapping reads, we developed the RMAP tool, which can map reads having a wide range of lengths and allows base-call quality scores to determine which positions in each read are more important when mapping. We applied RMAP to analyze data re-sequenced from two human BAC regions for varying read lengths, and varying criteria for use of quality scores. RMAP is freely available for downloading at <ext-link ext-link-type="uri" xlink:href="http://rulai.cshl.edu/rmap/"/>.</p></sec><sec><title>Conclusion</title><p>Our results indicate that significant gains in Solexa read mapping performance can be achieved by considering the information in 3' ends of longer reads, and appropriately using the base-call quality scores. The RMAP tool we have developed will enable researchers to effectively exploit this information in targeted re-sequencing projects.</p></sec></abstract></article-meta></front><body><sec><title>Background</title><p>The main technological advances that accompanied the genomic and post-genomic eras are high-throughput sequencing and hybridization microarrays. Sequencing technology enabled scientists to obtain the full genomic sequence for many species, including the human and many model organisms. Sequencing technology is also being used to selectively re-sequence the human genome to detect genome variations such as single nucleotide polymorphisms or large-scale structural variations. Because understanding these variations can immediately impact medical sciences, making sequencing more efficient and accessible is imperative. However, traditional methodologies used to sequence the first mammalian genomes remain expensive, time consuming, and labor intensive.</p><p>Oligonucleotide microarray technology, used to interrogate the RNA or DNA content of a sample, has emerged as a widely accessible and effective tool for studying gene expression or detecting protein-DNA interactions (<italic>i.e</italic>. ChIP-chip). Microarrays have also been used to detect genome variations, like SNPs or structural variations. Array-based hybridization also has limitations. For example, probes can behave in highly non-uniform ways, and the effects of cross-hybridization and resolution limits are poorly understood. Although significant research efforts are focused on these problems, they remain inherent in all hybridization-based methods.</p><p>The new sequencing technology referred to as "second-generation" shows promise to eliminate many of the problems associated with traditional sequencing technology and also those with oligonucleotide microarray technology. Second-generation sequencers are able to sequence more quickly and at lower cost in terms of both money and labor. New sequencing technologies are developed to sequence at greater depth, meaning that a clone can be sequenced from a sample even when that clone exists at very low abundance (<italic>i.e</italic>. 1 molecule per cell).</p><p>Several second-generation technologies have been developed using diverse methods. Two recent second-generation sequencers are from 454 Life Sciences (Roche Diagnostics) and Solexa (Illumina). The 454 sequencers use an emulsion method for DNA amplification and a pyrosequencing protocol for sequencing by synthesis (SBS) at picolitre-scale volumes. Current 454 sequencers can produce 25&#x02013;50 M nt of sequence in a single run, in the form of reads with length up to 500 nt (a number expected to increase), enabling this technology to be used for <italic>de-novo </italic>sequencing in addition to re-sequencing [<xref ref-type="bibr" rid="B1">1</xref>].</p><p>Solexa/Illumina 1G sequencers also use sequencing by synthesis, with DNA amplified on the surface of a flow cell, resulting in a random array of dense clusters [<xref ref-type="bibr" rid="B2">2</xref>]. The Solexa technology is faster and cheaper than that used in 454 sequencers, producing 1G nucleotides of sequence in one run but producing much shorter reads. Each individual read is roughly 25 to 50 bases in length (also expected to increase slightly in coming years). The Solexa sequencing technology has recently started producing breakthrough results. Research described in [<xref ref-type="bibr" rid="B3">3</xref>] and [<xref ref-type="bibr" rid="B4">4</xref>] employed Solexa sequencers to obtain high-resolution genomic maps of several histone modifications, as well as localization data for the DNA-binding proteins. Effectiveness of ChIP-sequencing has also been demonstrated by [<xref ref-type="bibr" rid="B5">5</xref>], who used Solexa sequencing to obtain locations of STAT1 binding sites in HeLa S3 cells before and following IFN-&#x003b3; stimulation.</p><p>Mapping reads from the Solexa sequencer presents an obvious algorithmic challenge: tens of millions of reads must be mapped to a large (<italic>e.g</italic>. mammalian) genome in a reasonable amount of time. Strong efforts to design short-read mapping algorithms have resulted in methods that are effective in particular contexts. The mapping algorithm implemented as part of the Solexa analysis pipeline is named ELAND (Efficient Large-Scale Alignment of Nucleotide Databases). ELAND is optimized to map very short reads, with length at most 32 nt, and ignores the additional bases when the sequenced reads are longer. ELAND also only allows at most two mismatches between the read and the genomic sequence to which it maps, which will clearly be too few for longer reads. Despite these restrictions, ELAND remains very useful for many mapping tasks because it is extremely efficient. The SXOligoSearch algorithm (by Synamatix) can quickly map reads of varying length, using different criteria, with performance depending on both the read length and mapping criteria. The performance of SXOligoSearch depends on use of the proprietary SynaBASE data structure. This data structure is a heavily compressed and annotated index for the reference genome that retains all non-redundant information. The gains in mapping speed by using such a data structure come at a cost in terms of the memory required for the SynaBASE data structure. Extreme memory requirements of the data structure makes SXOligoSearch unsuitable for use on hardware available in most labs.</p><p>In most re-sequencing applications accuracy of mapping is a primary concern. We must know with great accuracy what part of the genome was actually sequenced. There are several reasons why it might be difficult to determine the location in the reference genome from which a read was derived, or even if a read was derived from the reference genome. These include problems with the experiments, such as sequencing errors or sample contamination. Mapping is also made more difficult by repeats in the genome, and by polymorphisms. While mapping algorithms cannot be expected to be robust to all such problems, effort should be made to make the algorithms as robust as possible.</p><p>Two sources of information with the potential to improve mapping accuracy are the 3' ends of longer reads, which are often ignored because they contain a higher frequency of errors, and the base-call quality scores. The quality scores describe the confidence of bases in each read. Sequencing quality scores, introduced in the Phred algorithm [<xref ref-type="bibr" rid="B6">6</xref>,<xref ref-type="bibr" rid="B7">7</xref>], assign a probability to the four possible nucleotides for each sequenced base. The Solexa analysis pipeline, for example, includes a program called BUSTARD to calculate quality scores. Because the bases with lower quality scores are more likely to be sequencing errors, any potential mapping for a read should be penalized less for mismatching at positions with lower scores. The quality scores are especially important for mapping longer reads, since the 3' ends of longer reads are known to have a higher frequency of sequencing errors.</p><p>To investigate whether these sources of information can be used to improve accuracy when mapping reads, we developed the RMAP tool, which can map reads having a wide range of lengths and allows base-call quality scores to determine which positions in each read are more important when mapping. The only requirement on the base-call quality scores for use in RMAP is that they increase monotonically with the inverse of the error probability for a particular base call. Our results indicate that significant gains in mapping performance can be achieved by considering the information in 3' ends of longer reads, and appropriately using the quality scores.</p></sec><sec><title>Results and Discussion</title><sec><title>The mapping criteria</title><p>We designed RMAP to use two different mapping criteria, both based on approximate matching of the read and the reference genome. The first criterion is a simple count of mismatches between a read and the aligned genomic segment. Under this criterion, any unknown nucleotides in the reference genome (<italic>i.e</italic>. Ns) will induce a mismatch with any nucleotide. Uncalled positions, where the sequencing was unable to determine the nucleotide, also induce a mismatch. For a fixed read length, by allowing a greater number of mismatches, more reads can be mapped to reference genome. We refer to this simple mismatch criterion as RMAPM (RMAP using <italic>mismatch </italic>scores).</p><p>The second criterion, also based on mismatch-counts, makes use of the base-call quality scores. A cutoff for the base-call quality score is used to designate positions as either high-quality (HQ) or low-quality (LQ), depending on whether the quality score of the highest-scoring base at that position exceeds the cutoff. Low-quality positions always induce a match (<italic>i.e</italic>. act as wild-cards). To prevent the possibility of trivial matches, a quality control step eliminates reads with too many low-quality positions. As with the first criterion, mapping accuracy can be controlled by manipulating the number of allowed mismatches when mapping. But for the second criterion, manipulating the quality-score cutoff provides another means of adjusting sensitivity and specificity, and allows positions to contribute when they are of high-quality, but not be penalized if they are low-quality. We refer to this criterion as RMAPQ (RMAP using <italic>quality </italic>scores).</p></sec><sec><title>Evaluating mapping accuracy</title><sec><title>Measuring mapping accuracy</title><p>In measuring mapping accuracy, we want to quantify both sensitivity and specificity by using reads sequenced from DNA samples from selected genomic regions instead of the entire genome. By mapping those reads to the genome, we can evaluate how accurately they are mapped to the target region. However, there are theoretical and practical limits to how well these can be measured. Inability to map a read correctly can be attributed to sequencing errors (arising from any part of the experiment), to variation between the sampled genome and the reference genome, or can result from ambiguities caused by repeats in the reference genome. These diverse sources of error make it difficult to measure accuracy in terms of traditional sensitivity and specificity.</p><p>Ambiguous reads, under a given mapping criterion, are reads that map to more than one location in the reference genome. Reads that map to a single location are called uniquely mappable (or simply mappable) reads. All reads that are not mapped uniquely to some location in the reference genome are said to be unmappable (which includes ambiguous reads). We define target region coverage (or simply coverage) as the number of bases in the target region covered by at least one mappable read, divided by the total number of bases in the target region. In order to compare the coverage values for different read lengths, we use only the first base of each read to represent that read. By counting bases covered, rather than number of reads that map to the target region, greater target region coverage is achieved when the reads map uniformly in the target region. We define mapping <italic>selectivity </italic>as the number of mappable reads that map inside the target region, divided by the total number of mappable reads. A read is said to map inside the target region if any part of the read overlaps the target region. The selectivity shows how well the mapping criterion places mappable reads inside the target region. In this study, when we refer to mapping accuracy, we are referring to both coverage and mapping selectivity (and we formally treat accuracy as the mean of these two measures).</p></sec><sec><title>Evaluation data</title><p>We used the data from samples of two BACs provided for sequencer validation by Solexa, which covers 162 kb of the chromosome 6 MHC region in an A1-B8-DR3 alternate haplotype assembly based on sequence data from the COX library [<xref ref-type="bibr" rid="B8">8</xref>]. We chose one lane of reads sequenced by the 1G sequencers at the CSHL Genome Center. The total number of raw 36 nt reads in this data set is 3.4 million, with the quality score of each base ranging from -5 to 40 (as called by the BUSTARD program from the Solexa analysis pipeline). As reference genome we used hg18, all chromosomes except chr6, which we replaced entirely with chr6_cox_hap1, the A1-B8-DR3 alternate haplotype assembly. We chose to include this alternate haplotype in the reference because it is the origin of the BAC that was sequenced. We excluded the ordinary chr6 because it has high similarity with chr6_cox_hap1, and including both of these would have resulted in a high proportion of reads mapping ambiguously to chr6 and chr6_cox_hap1 (see additional file <xref ref-type="supplementary-material" rid="S1">1</xref>).</p></sec><sec><title>Evaluation procedure</title><p>To investigate how information is distributed within the reads, we ran RMAP on all reads with lengths ranging from 25&#x02013;36 nt, allowing mismatches in the range of 0 to 10, and using both the RMAPM and RMAPQ criteria. For the RMAPQ criterion, we chose {4, 8, 12, 16, 20, 24} as the set of quality-score cutoffs to evaluate. Reads with fewer than 10 contiguous HQ bases (<italic>i.e</italic>. bases scoring above the quality-score cutoff) were considered unmappable and removed from consideration, as the algorithm requires a minimum number of high-quality bases for efficiency (see Methods section for details). Any read lacking 10 consecutive high-quality bases would likely have a very high overall amount of error.</p></sec></sec><sec><title>Mapping longer reads with more mismatches increases accuracy</title><p>The Solexa sequencer can produce reads of more than 50 bases, and longer reads contain more sequence information. Although it is known that the quality of sequenced bases in reads decreases toward the 3' end of the read, especially as read length increases, it remains to be shown how much useful information may still exist in bases at the 3' ends of longer reads. Making use of any additional bases is only expected to improve mapping accuracy if the additional bases contain information of sufficient quality. When the BAC reads were mapped to the human genome using the RMAPM criterion, with length from 25&#x02013;36 nt, and different number of allowed mismatches, we found that there is generally a great deal of information in 3' end bases up to 36 nt. These results are presented in Figure <xref ref-type="fig" rid="F1">1</xref> and Supplementary Table 1 (see additional file <xref ref-type="supplementary-material" rid="S2">2</xref>) (We remark that the accuracy of RMAP using the RMAPM criterion for reads shorter than 32 nt, allowing at most 2 mismatches, is the same as that of ELAND). The BAC coverage always increased with length of mapped reads, except when only one or zero mismatches are allowed. The mapping selectivity decreases monotonically with read length when zero or at most one mismatch is allowed. When multiple mismatches are allowed, the mapping selectivity first increases with read length, then decreases slightly. Taking the mean of these two measures as overall mapping accuracy, we see that the combined target region coverage and mapping selectivity is maximized when read length is 36 nt and up to 4 mismatches are allowed. Comparing read lengths between 25 nt and 36 nt, the mapping selectivity increases 6.4% while the BAC region coverage increases 8.6%. By extrapolating our results, even greater improvements are expected as read lengths increase beyond 36 nt.</p><fig position="float" id="F1"><label>Figure 1</label><caption><p><bold>Comparison of mapping accuracy of RMAPM criterion under different parameter combinations</bold>. Comparison of mapping accuracy for reads of different lengths, and allowing different numbers of mismatches without using quality scores. Both the target (BAC) region coverage (a) and the mapping selectivity (b) are displayed. The mean of these two measures is presented in (c) as mapping accuracy. Standard error of displayed values was always &#x02264; 1.0% and usually &#x0003c; 0.1%, as estimated by mapping reads obtained from the second lane of the same sequencing run of the same BAC regions (this applies also to values in Figure 2).</p></caption><graphic xlink:href="1471-2105-9-128-1"/></fig></sec><sec><title>Using quality score information increases accuracy</title><p>We tested different cutoffs for defining high quality bases to estimate the ability of the RMAPQ criterion to most effectively use the quality information in the reads. We achieve better mapping performance in both BAC coverage and mapping selectivity when using longer reads with high quality score cutoff of 4 to 24 than without using quality score filtering (See Figure <xref ref-type="fig" rid="F2">2</xref>, and additional file <xref ref-type="supplementary-material" rid="S2">2</xref>). This is due to a larger number of reads being mapped unambiguously to the genome by the RMAPQ criterion, and a larger number of those being mapped to the target (BAC) regions. The best mapping accuracy was achieved when reads were of length 36 nt, a quality-score cutoff of 8 was used, and when at most one mismatch was allowed. For these settings, the mapping selectivity further improved almost 3% with the same BAC coverage, compared with the best accuracy of RMAP using the RMAPM criterion. These results demonstrate that the way in which the quality scores are incorporated into RMAP results in improved accuracy.</p><fig position="float" id="F2"><label>Figure 2</label><caption><p><bold>Mapping accuracy of RMAPQ criterion under varying parameters</bold>. Reads with length from 25&#x02013;36 nt were mapped and 0,1, or 2 mismatches were allowed at high quality bases defined by quality score cutoffs of 4 (d) or 8 (a-d). For reference, mapping performance of RMAPM criterion with at most 2 mismatches is also shown. (a) The BAC coverage; (b) the mapping selectivity; (c) the overall mapping accuracy (equal to the mean of the BAC coverage and selectivity).(d) 2-D performance comparison in both BAC coverage and selectivity of RMAPM and RMAPQ.</p></caption><graphic xlink:href="1471-2105-9-128-2"/></fig><p>The reads derived from the BACs provided by Solexa for the purpose of validation are of very high quality. For a given 162 Kb BAC region, most of these 3.4 million reads can be mapped almost perfectly. This introduces a saturation effect, leaving limited space for improvement, as highly accurate mapping is achieved easily. RMAP still makes significant improvements within this narrow range. In many applications, without this ceiling effect, the improvement is expected to be even more pronounced.</p><p>We also compared the mapping accuracy of RMAP with another available, but presently unpublished, method called MAQ [<xref ref-type="bibr" rid="B9">9</xref>]. Using default parameter setting, we ran MAQ to map the set of 3.4 M reads from the BAC. Although MAQ had speed and memory usage similar to RMAP, we found MAQ to have lower mapping accuracy (see additional file <xref ref-type="supplementary-material" rid="S3">3</xref>) when allowing at most 2 mismatches.</p></sec></sec><sec><title>Discussion</title><p>Widely-accessible second-generation sequencing technologies promise to revolutionize many areas of bio-medical research. In addition to <italic>de novo </italic>sequencing of new species, these technologies make targeted re-sequencing a reality. Re-sequencing will provide more accurate means of interrogating the oligo-nucleotide content of samples, and of identifying important genome variations, such as disease-related SNPs. Mapping reads to genomes is a critical step in re-sequencing data analysis, and both the algorithmic and software technology must keep pace with surging advances in the throughput of sequencing instruments.</p><p>In order to maximize the use of available information in mapping Solexa reads, we developed the RMAP tool, which incorporates base-call quality scores to improve accuracy. RMAP responds to an urgent need for such an algorithm by providing both the accuracy to handle emerging mapping tasks. Our results in applying RMAP have shown that more reads can be mapped into the target regions when using the RMAPM criterion to map longer reads and allow more mismatches. We have also shown that the way in which quality scores are used in RMAP (the RMAPQ criterion) significantly increases both coverage and mapping selectivity.</p><p>Although second-generation sequencing technology is currently producing many important results, there is still little understanding of how this technology should behave with respect to sequencing errors and what are the general properties of typical re-sequencing data sets. As more knowledge accumulates about typical results from this new sequencing technology, more information can be incorporated into algorithms for mapping reads and other associated analysis tasks.</p><p>In theory we could move toward an ideal mapping criterion by predictive modeling, where a model would be trained to identify the location from which each read was derived. Although the best mapping criteria may not be amenable to high-throughput computation, some approximation of those criteria could be developed. Cross-validation and the use of a wide range of data sets could be used to ensure that the trained criteria are sufficiently general. In practice such a procedure would require high-quality training data, and an extreme amount of computing time to train and evaluate such models.</p><p>RMAP does not consider insertions or deletions (indels), which are potentially important in certain sequencing applications (<italic>e.g</italic>. indel polymorphisms). The straight-forward strategy for handling indels is to extend initial seed matches using a Smith-Waterman-style alignment, as is commonly done in database search programs like BLAST [<xref ref-type="bibr" rid="B10">10</xref>]. For short reads, with length &#x02264; 50 bases, providing this greater flexibility will require careful investigation into scoring the alignments, because using simple scoring schemes for indels may result in higher rate of false-positive mappings and ambiguities. In addition, because indels have nothing analogous to the base-call quality scores, it will be more difficult to distinguish errors from real genotypic variations during the mapping stage of analysis. We have observed that data sets containing a high proportion of low-complexity reads, such as single nucleotide repeats, cause a decrease in execution speed of RMAP. This is explained by such low complexity seeds resulting in a large increase in the number of full comparisons (between reads and regions of the reference genome), that are induced by these highly-common seeds. The exclusion strategy used in RMAP is also heavily used by popular programs for searching sequence databases. Research effort toward improving the structure of seeds used in these algorithms has also led to improvements in the algorithms themselves [<xref ref-type="bibr" rid="B11">11</xref>], and similar improvements might be observed by developing seeds specifically for the short read mapping problem.</p><p>The filtration strategy used in RMAP can also be extended to "multiple filtration", as described by [<xref ref-type="bibr" rid="B12">12</xref>]. This uses multiple criteria for excluding possible mappings, and would result in the algorithm performing fewer full comparisons between reads and genomic regions. Unlike many other applications of approximate matching, the extreme volume of data that must be mapped means that algorithms for mapping reads must be conscious of the memory required. In the framework of RMAP, the most straight-forward implementation of multiple filtration would use larger (multidimensional) or additional hash-tables, which generally requires a great deal more memory. For short reads, as produced by the Solexa sequencer, the full comparisons can be computed very fast, so another concern is keeping the work required to implement more powerful filtration less than that required to do the extra comparisons.</p><p>Aside from further processing on the set of reads, efficiency improvements can be gained by indexing the reference genome. This is the strategy used by SXOligoSearch, through the proprietary SynaBASE data structure. Because the reference genome will likely remain static for many mapping tasks (<italic>e.g </italic>several experiments using the hg18 genome), this indexing can be done off-line, so the time required to build such an index is not important. The usual problem with indexing the genome is that such index structures are often several times larger than the genome itself. The more information built into the index to facilitate searches, the larger the index must be. As stated above, hardware currently available for mapping usually has a few GB of memory, and this restricts the kinds of indexing that can be done on entire genomes. To make genome index structures practical, they must either be small, or support on-line processing so that only a small portion of the structure must reside in memory at once. It is likely that special purpose data structures for indexing the genome can be developed to fit these requirements, and greatly improve efficiency of mapping reads. Specifically with respect to RMAP, adding any means of eliminating exact genomic repeats during mapping will greatly improve efficiency.</p></sec><sec><title>Conclusion</title><p>Our results indicate that significant gains in Solexa read mapping performance can be achieved by considering the information in 3' ends of longer reads, and appropriately using the base-call quality scores. The RMAP tool we have developed will enable researchers to effiectively exploit this information in targeted re-sequencing projects.</p></sec><sec><title>Availability and Requirements</title><p>The RMAP tool is freely available for downloading at <ext-link ext-link-type="uri" xlink:href="http://rulai.cshl.edu/rmap/"/>.</p></sec><sec sec-type="methods"><title>Methods</title><sec><title>Design of the RMAP algorithm</title><p>In this section we describe the algorithmic strategy used in RMAP. We treat the mapping problem as approximately matching a set of patterns in a text &#x02013; the set of patterns being the reads, and the text being the genome. This problem has been well studied, and several general algorithmic strategies have emerged for solving it (see [<xref ref-type="bibr" rid="B13">13</xref>] for a detailed treatment). The major motivation for developing the RMAP algorithm was to incorporate base-call quality scores to weight mismatches and improve mapping accuracy. In addition to having high mapping accuracy, RMAP was designed under the restrictions that it must be capable of (1) mapping reads with length exceeding 50 bases (for the applications discussed in the introduction), (2) allowing the number of mismatches to be controlled (not being restricted to a small fixed number), and (3) completing mapping tasks under reasonable time constraints on widely available computing hardware.</p><p>The algorithm implemented in RMAP uses the filtration method described by [<xref ref-type="bibr" rid="B14">14</xref>]. For reads of length <italic>n</italic>, and mapping with up to <italic>k </italic>mismatches, each read is partitioned into <italic>k </italic>+ 1 contiguous <italic>seeds </italic>(each seed is a substring of the read, and has length &#x0230a;<italic>n</italic>/(<italic>k </italic>+ 1)&#x0230b;). Because there can only be <italic>k </italic>mismatches in a mapping, and there are <italic>k </italic>+ 1 seeds for each read, any mapping must have at least one seed with no mismatches. The algorithm first identifies locations in the genome where the seeds match exactly. Exact matching can be done much more quickly than approximate matching, and evaluating the approximate match between a read and a genomic region only needs to be done for those regions surrounding an exactly-matching seed.</p><p>To efficiently implement the filtration strategy, RMAP pre-processes the set of reads, building a hash-table (which we refer to as the seed-table) indexed by the seeds. The table entry for a particular seed lists all reads containing that seed, along with the offset of that seed within the read. For a set of <italic>r </italic>reads, each having length <italic>n</italic>, if <italic>k </italic>mismatches are allowed in the search, the seed table has size <italic>O</italic>(4<sup><italic>n</italic>/<italic>k </italic></sup>+ <italic>rk</italic>). The mapping proceeds by scanning the genome, with a window of size equal to the seed size. Each segment of the genome is tested as a seed by hashing that segment to determine the set of reads that must be compared in their entirety with a larger genomic region surrounding the segment of the genome currently being scanned. This is a common strategy to implement the filtration stage of approximate matching. The influence of the size of the genome in the time complexity of RMAP is therefore linear, and importantly the space complexity of RMAP is independent of the size of the genome.</p><p>The step of comparing the full read to portions of the genome where a seed has been found is implemented to require time that is logarithmic in the length of the reads. The comparison takes advantage of bit-wise operations, and the reads are encoded in a binary format (see additional file <xref ref-type="supplementary-material" rid="S4">4</xref> for supplementary method). A series of logical operations produce a vector indicating the locations of mismatches between the read and the genomic segment being compared, and the weight of the bit-vector indicating mismatches computed using a well-known technique described by [<xref ref-type="bibr" rid="B15">15</xref>].</p><p>RMAP is sufficiently fast that several million reads can be mapped to a mammalian genome in one day on a computer with a single processor. No portion of the reference genome is maintained by RMAP, and the size of the seed table dominates the space requirements. Because these requirements are sufficiently small, RMAP can be run on widely available hardware. This includes the nodes typically used in cluster computers, and allows the processing to be easily and effectively parallelized by simply partitioning the set of reads. On a test data set generated by randomly sampling one million 50 nt segments (simulated reads) from the hg18 genome, and randomly changing up to 4 bases in each read, our current implementation of RMAP was able to map the reads back to the hg18 genome in 140 minutes using roughly 620 MB of memory.</p></sec></sec><sec><title>Authors' contributions</title><p>ADS, XZ and MQZ conceived the research; ADS and XZ conducted the research and wrote the article. All authors have read and approved the final manuscript.</p></sec><sec sec-type="supplementary-material"><title>Supplementary Material</title><supplementary-material content-type="local-data" id="S1"><caption><title>Additional file 1</title><p>Mapping performance comparison by using either chr6 or its COX alterantive haplotype. Comparing the mapping performance for RMAPM and RMAPQ when using either chr6 or its COX alterantive haplotype assembly.</p></caption><media xlink:href="1471-2105-9-128-S1.xls" mimetype="application" mime-subtype="vnd.ms-excel"><caption><p>Click here for file</p></caption></media></supplementary-material><supplementary-material content-type="local-data" id="S2"><caption><title>Additional file 2</title><p>Reads mapped in genome and BACs by using different mapping criteria. Number of reads mapped to genome and BACs by using RMAPM or RMAPQ with different read length and maximum number of allowed mismatches.</p></caption><media xlink:href="1471-2105-9-128-S2.xls" mimetype="application" mime-subtype="vnd.ms-excel"><caption><p>Click here for file</p></caption></media></supplementary-material><supplementary-material content-type="local-data" id="S3"><caption><title>Additional file 3</title><p>Mapping performance comparison with MAQ. Comparing the mapping performance between RMAPM, RMAPQ with MAQ by using different read length.</p></caption><media xlink:href="1471-2105-9-128-S3.pdf" mimetype="application" mime-subtype="pdf"><caption><p>Click here for file</p></caption></media></supplementary-material><supplementary-material content-type="local-data" id="S4"><caption><title>Additional file 4</title><p>Counting mismatches between reads and genomic sequence. The method used for counting mismatches between reads and genomic sequence.</p></caption><media xlink:href="1471-2105-9-128-S4.pdf" mimetype="application" mime-subtype="pdf"><caption><p>Click here for file</p></caption></media></supplementary-material></sec></body><back><ack><sec><title>Acknowledgements</title><p>The authors would like to thank Richard McCombie, Vivekanand Balija, Melissa Kramer in Genome center of Cold Spring Harbor Laboratory for providing us the Solexa sequencing data and helpful suggestion. This work was supported partly by the National Institutes of Health (HG001696), the National Science Foundation (0324292) and DART Neurogenomics Alliance Foundation.</p></sec></ack><ref-list><ref id="B1"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Margulies</surname><given-names>M</given-names></name><name><surname>Egholm</surname><given-names>M</given-names></name><name><surname>Altman</surname><given-names>W</given-names></name><name><surname>Attiya</surname><given-names>S</given-names></name><name><surname>Bader</surname><given-names>J</given-names></name><name><surname>Bemben</surname><given-names>L</given-names></name><name><surname>Berka</surname><given-names>J</given-names></name><name><surname>Braverman</surname><given-names>M</given-names></name><name><surname>Chen</surname><given-names>Y</given-names></name><name><surname>Chen</surname><given-names>Z</given-names></name><name><surname>Dewell</surname><given-names>S</given-names></name><name><surname>Du</surname><given-names>L</given-names></name><name><surname>Fierro</surname><given-names>J</given-names></name><name><surname>Gomes</surname><given-names>X</given-names></name><name><surname>Godwin</surname><given-names>B</given-names></name><name><surname>He</surname><given-names>W</given-names></name><name><surname>Helgesen</surname><given-names>S</given-names></name><name><surname>Ho</surname><given-names>C</given-names></name><name><surname>Ho</surname><given-names>C</given-names></name><name><surname>Irzyk</surname><given-names>G</given-names></name><name><surname>Jando</surname><given-names>S</given-names></name><name><surname>Alenquer</surname><given-names>M</given-names></name><name><surname>Jarvie</surname><given-names>T</given-names></name><name><surname>Jirage</surname><given-names>K</given-names></name><name><surname>Kim</surname><given-names>J</given-names></name><name><surname>Knight</surname><given-names>J</given-names></name><name><surname>Lanza</surname><given-names>J</given-names></name><name><surname>Leamon</surname><given-names>J</given-names></name><name><surname>Lefkowitz</surname><given-names>S</given-names></name><name><surname>Lei</surname><given-names>M</given-names></name><name><surname>Li</surname><given-names>J</given-names></name><name><surname>Lohman</surname><given-names>K</given-names></name><name><surname>Lu</surname><given-names>H</given-names></name><name><surname>Makhijani</surname><given-names>V</given-names></name><name><surname>McDade</surname><given-names>K</given-names></name><name><surname>McKenna</surname><given-names>M</given-names></name><name><surname>Myers</surname><given-names>E</given-names></name><name><surname>Nickerson</surname><given-names>E</given-names></name><name><surname>Nobile</surname><given-names>J</given-names></name><name><surname>Plant</surname><given-names>R</given-names></name><name><surname>Puc</surname><given-names>B</given-names></name><name><surname>Ronan</surname><given-names>M</given-names></name><name><surname>Roth</surname><given-names>G</given-names></name><name><surname>Sarkis</surname><given-names>G</given-names></name><name><surname>Simons</surname><given-names>J</given-names></name><name><surname>Simpson</surname><given-names>J</given-names></name><name><surname>Srinivasan</surname><given-names>M</given-names></name><name><surname>Tartaro</surname><given-names>K</given-names></name><name><surname>Tomasz</surname><given-names>A</given-names></name><name><surname>Vogt</surname><given-names>K</given-names></name><name><surname>Volkmer</surname><given-names>G</given-names></name><name><surname>Wang</surname><given-names>S</given-names></name><name><surname>Wang</surname><given-names>Y</given-names></name><name><surname>Weiner</surname><given-names>M</given-names></name><name><surname>Yu</surname><given-names>P</given-names></name><name><surname>Begley</surname><given-names>R</given-names></name><name><surname>Rothberg</surname><given-names>J</given-names></name></person-group><article-title>Genome sequencing in microfabricated high-density picolitre reactors</article-title><source>Nature</source><year>2005</year><volume>437</volume><fpage>376</fpage><lpage>80</lpage><pub-id pub-id-type="pmid">16056220</pub-id></citation></ref><ref id="B2"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Bentley</surname><given-names>DR</given-names></name></person-group><article-title>Whole-genome re-sequencing</article-title><source>Current Opinion in Genetics &#x00026; Development</source><year>2006</year><volume>16</volume><fpage>545</fpage><lpage>552</lpage><pub-id pub-id-type="pmid">17055251</pub-id><pub-id pub-id-type="doi">10.1016/j.gde.2006.10.009</pub-id></citation></ref><ref id="B3"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Barski</surname><given-names>A</given-names></name><name><surname>Cuddapah</surname><given-names>S</given-names></name><name><surname>Cui</surname><given-names>K</given-names></name><name><surname>Roh</surname><given-names>TY</given-names></name><name><surname>Schones</surname><given-names>DE</given-names></name><name><surname>Wang</surname><given-names>Z</given-names></name><name><surname>Wei</surname><given-names>G</given-names></name><name><surname>Chepelev</surname><given-names>I</given-names></name><name><surname>Zhao</surname><given-names>K</given-names></name></person-group><article-title>High-Resolution Profiling of Histone Methylations in the Human Genome</article-title><source>Cell</source><year>2007</year><volume>129</volume><fpage>823</fpage><lpage>837</lpage><pub-id pub-id-type="pmid">17512414</pub-id><pub-id pub-id-type="doi">10.1016/j.cell.2007.05.009</pub-id></citation></ref><ref id="B4"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Mikkelsen</surname><given-names>TS</given-names></name><name><surname>Ku</surname><given-names>M</given-names></name><name><surname>Jaffe</surname><given-names>DB</given-names></name><name><surname>Issac</surname><given-names>B</given-names></name><name><surname>Lieberman</surname><given-names>E</given-names></name><name><surname>Giannoukos</surname><given-names>G</given-names></name><name><surname>Alvarez</surname><given-names>P</given-names></name><name><surname>Brockman</surname><given-names>W</given-names></name><name><surname>Kim</surname><given-names>TK</given-names></name><name><surname>Koche</surname><given-names>RP</given-names></name><name><surname>Lee</surname><given-names>W</given-names></name><name><surname>Mendenhall</surname><given-names>E</given-names></name><name><surname>O'Donovan</surname><given-names>A</given-names></name><name><surname>Presser</surname><given-names>A</given-names></name><name><surname>Russ</surname><given-names>C</given-names></name><name><surname>Xie</surname><given-names>X</given-names></name><name><surname>Meissner</surname><given-names>A</given-names></name><name><surname>Wernig</surname><given-names>M</given-names></name><name><surname>Jaenisch</surname><given-names>R</given-names></name><name><surname>Nusbaum</surname><given-names>C</given-names></name><name><surname>Lander</surname><given-names>ES</given-names></name><name><surname>Bernstein</surname><given-names>BE</given-names></name></person-group><article-title>Genome-wide maps of chromatin state in pluripotent and lineage-committed cells</article-title><source>Nature</source><year>2007</year><volume>448</volume><fpage>553</fpage><lpage>560</lpage><pub-id pub-id-type="pmid">17603471</pub-id><pub-id pub-id-type="doi">10.1038/nature06008</pub-id></citation></ref><ref id="B5"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Robertson</surname><given-names>G</given-names></name><name><surname>Hirst</surname><given-names>M</given-names></name><name><surname>Bainbridge</surname><given-names>M</given-names></name><name><surname>Bilenky</surname><given-names>M</given-names></name><name><surname>Zhao</surname><given-names>Y</given-names></name><name><surname>Zeng</surname><given-names>T</given-names></name><name><surname>Euskirchen</surname><given-names>G</given-names></name><name><surname>Bernier</surname><given-names>B</given-names></name><name><surname>Varhol</surname><given-names>R</given-names></name><name><surname>Delaney</surname><given-names>A</given-names></name><name><surname>Thiessen</surname><given-names>N</given-names></name><name><surname>Griffith</surname><given-names>OL</given-names></name><name><surname>He</surname><given-names>A</given-names></name><name><surname>Marra</surname><given-names>M</given-names></name><name><surname>Snyder</surname><given-names>M</given-names></name><name><surname>Jones</surname><given-names>S</given-names></name></person-group><article-title>Genome-wide profiles of STAT1 DNA association using chromatin immunoprecipitation and massively parallel sequencing</article-title><source>Nature Methods</source><year>2007</year><volume>4</volume><fpage>651</fpage><lpage>657</lpage><pub-id pub-id-type="pmid">17558387</pub-id><pub-id pub-id-type="doi">10.1038/nmeth1068</pub-id></citation></ref><ref id="B6"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Ewing</surname><given-names>B</given-names></name><name><surname>Hillier</surname><given-names>L</given-names></name><name><surname>Wendl</surname><given-names>MC</given-names></name><name><surname>Green</surname><given-names>P</given-names></name></person-group><article-title>Base-Calling of Automated Sequencer Traces Using Phred. I. Accuracy Assessment</article-title><source>Genome Res</source><year>1998</year><volume>8</volume><fpage>175</fpage><lpage>185</lpage><pub-id pub-id-type="pmid">9521921</pub-id></citation></ref><ref id="B7"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Ewing</surname><given-names>B</given-names></name><name><surname>Green</surname><given-names>P</given-names></name></person-group><article-title>Base-Calling of Automated Sequencer Traces Using Phred. II. Error Probabilities</article-title><source>Genome Res</source><year>1998</year><volume>8</volume><fpage>186</fpage><lpage>194</lpage><pub-id pub-id-type="pmid">9521922</pub-id></citation></ref><ref id="B8"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Stewart</surname><given-names>CA</given-names></name><name><surname>Horton</surname><given-names>R</given-names></name><name><surname>Allcock</surname><given-names>RJ</given-names></name><name><surname>Ashurst</surname><given-names>JL</given-names></name><name><surname>Atrazhev</surname><given-names>AM</given-names></name><name><surname>Coggill</surname><given-names>P</given-names></name><name><surname>Dunham</surname><given-names>I</given-names></name><name><surname>Forbes</surname><given-names>S</given-names></name><name><surname>Halls</surname><given-names>K</given-names></name><name><surname>Howson</surname><given-names>JM</given-names></name><name><surname>Humphray</surname><given-names>SJ</given-names></name><name><surname>Hunt</surname><given-names>S</given-names></name><name><surname>Mungall</surname><given-names>AJ</given-names></name><name><surname>Osoegawa</surname><given-names>K</given-names></name><name><surname>Palmer</surname><given-names>S</given-names></name><name><surname>Roberts</surname><given-names>AN</given-names></name><name><surname>Rogers</surname><given-names>J</given-names></name><name><surname>Sims</surname><given-names>S</given-names></name><name><surname>Wang</surname><given-names>Y</given-names></name><name><surname>Wilming</surname><given-names>LG</given-names></name><name><surname>Elliott</surname><given-names>JF</given-names></name><name><surname>de Jong</surname><given-names>PJ</given-names></name><name><surname>Sawcer</surname><given-names>S</given-names></name><name><surname>Todd</surname><given-names>JA</given-names></name><name><surname>Trowsdale</surname><given-names>J</given-names></name><name><surname>Beck</surname><given-names>S</given-names></name></person-group><article-title>Complete MHC Haplotype Sequencing for Common Disease Gene Mapping</article-title><source>Genome Res</source><year>2004</year><volume>14</volume><fpage>1176</fpage><lpage>1187</lpage><pub-id pub-id-type="pmid">15140828</pub-id><pub-id pub-id-type="doi">10.1101/gr.2188104</pub-id></citation></ref><ref id="B9"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Li</surname><given-names>H</given-names></name></person-group><article-title>Maq: Mapping and Assembly with Qualities</article-title><source>Version 063</source><year>2008</year><ext-link ext-link-type="uri" xlink:href="http://maq.sourceforge.net/index.shtml"/></citation></ref><ref id="B10"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Altschul</surname><given-names>S</given-names></name><name><surname>Gish</surname><given-names>W</given-names></name><name><surname>Miller</surname><given-names>W</given-names></name><name><surname>Myers</surname><given-names>E</given-names></name><name><surname>Lipman</surname><given-names>D</given-names></name></person-group><article-title>Basic local alignment search tool</article-title><source>J Mol Biol</source><year>1990</year><volume>215</volume><fpage>403</fpage><lpage>410</lpage><pub-id pub-id-type="pmid">2231712</pub-id></citation></ref><ref id="B11"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Ma</surname><given-names>B</given-names></name><name><surname>Tromp</surname><given-names>J</given-names></name><name><surname>Li</surname><given-names>M</given-names></name></person-group><article-title>PatternHunter: faster and more sensitive homology search</article-title><source>Bioinformatics</source><year>2002</year><volume>18</volume><fpage>440</fpage><lpage>445</lpage><pub-id pub-id-type="pmid">11934743</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/18.3.440</pub-id></citation></ref><ref id="B12"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Pevzner</surname><given-names>PA</given-names></name><name><surname>Waterman</surname><given-names>MS</given-names></name></person-group><article-title>Multiple Filtration and Approximate Pattern Matching</article-title><source>Algorithmica</source><year>1995</year><volume>13</volume><fpage>135</fpage><lpage>154</lpage><pub-id pub-id-type="doi">10.1007/BF01188584</pub-id></citation></ref><ref id="B13"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Gusfield</surname><given-names>D</given-names></name></person-group><source>Algorithms on Strings, Trees, and Sequences: Computer Science and Computational Biology</source><year>1997</year><publisher-name>Cambridge University Press</publisher-name></citation></ref><ref id="B14"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Baeza-Yates</surname><given-names>R</given-names></name><name><surname>Perleberg</surname><given-names>C</given-names></name></person-group><article-title>Fast and practical approximate pattern matching</article-title><source>Information Processing Letters</source><year>1996</year><volume>59</volume><fpage>21</fpage><lpage>27</lpage><pub-id pub-id-type="doi">10.1016/0020-0190(96)00083-X</pub-id></citation></ref><ref id="B15"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Warren</surname><given-names>HS</given-names></name></person-group><source>Hacker's Delight</source><year>2002</year><publisher-name>Boston, MA, USA: Addison-Wesley Longman Publishing Co., Inc</publisher-name></citation></ref></ref-list></back></article>


